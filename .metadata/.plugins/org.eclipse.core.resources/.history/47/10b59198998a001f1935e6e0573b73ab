<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="shortcut icon" type="image/x-icon" href="http://localhost/jspPro/images/SiSt.ico">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="http://localhost/jspPro/resources/cdn-main/example.css">
<script src="http://localhost/jspPro/resources/cdn-main/example.js"></script>
<style>
 span.material-symbols-outlined{
    vertical-align: text-bottom;
 }  
</style>
</head>
<body>
<header>
  <h1 class="main"><a href="#" style="position: absolute;top:30px;">kenik HOme</a></h1>
  <ul>
    <li><a href="#">로그인</a></li>
    <li><a href="#">회원가입</a></li>
  </ul>
</header>
<div>
 <xmp class="code">
    index.jsp
    1. JSP/Servlet
  		ㄴjava의 web 기술
  	    1) Servlet 단점 너무 많아
  	    2) JSP = Java Server Page
  			 자바 언어 + 서버에서 실행되는 페이지
  			 
    2. 처리 과정
       client(browser) --request--> web server(apache) -> WAS(index.jsp + Java 컴파일, 실행하여 결과물 생성(html 형태))
       					url : index.html이라면 바로 결과를 응답
       					
       					하지만
       					url : index.jsp이라면 응답만 하고 java를 compile, 실행할 수 없어
       					그러니까 java로 작성된 걸 complie, 실행할 게 필요하므로
       					web application server사용(Tomcat)
       					
       				   <--response--
       				   
       				   jsp 문법은 tomcat 버전에 따라 달라져
       				 
    3. 
  </xmp>
</div> 
</body>
</html>